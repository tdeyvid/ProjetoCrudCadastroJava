package Interface;

import Connection.ModuloConexao;
import Controle.ConsultaDAO;
import Model.Clientes;
import Report.GeraRelatorio;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 * @author Deyvid
 */
public class TelaConsulta extends javax.swing.JInternalFrame {

    Clientes objclientes = new Clientes();

    Connection conexao = null;

    /**
     * Creates new form TelaConsulta
     */
    public TelaConsulta() {
        initComponents();
        conexao = ModuloConexao.conector();
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaConsulta().setVisible(true);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jcTipo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        tjArg = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnCapturar = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        btnSair2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jbTabela = new javax.swing.JTable();
        btnPesquisar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jcTipo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jcTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nome", "Cpf", "Rg" }));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Consultar por:");

        tjArg.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tjArg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tjArgKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Digite o tipo da consulta:");

        btnCapturar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCapturar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/capturar.png"))); // NOI18N
        btnCapturar.setText("Capturar");
        btnCapturar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapturarActionPerformed(evt);
            }
        });

        btnImprimir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/print_icon.png"))); // NOI18N
        btnImprimir.setText("Imprimir");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        btnSair2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSair2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/exit.png"))); // NOI18N
        btnSair2.setText("Sair");
        btnSair2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSair2ActionPerformed(evt);
            }
        });

        jbTabela = new javax.swing.JTable(){
            public boolean isCallEditable(int roowIndex, int colIndex){
                return false;
            }
        };
        jbTabela.setAutoCreateRowSorter(true);
        jbTabela.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jbTabela.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod", "Nome", "Situação do cadastro", "Data do cadastro", "Email", "Celular", "WhatsApp", "CPF", "RG", "Sexo", "Endereço"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jbTabela.setFocusable(false);
        jbTabela.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jbTabela);

        btnPesquisar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/pesquisar_1.png"))); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tjArg, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPesquisar)
                        .addGap(33, 33, 33)
                        .addComponent(btnCapturar)
                        .addGap(33, 33, 33)
                        .addComponent(btnImprimir)
                        .addGap(28, 28, 28)
                        .addComponent(btnSair2))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1288, Short.MAX_VALUE))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tjArg, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCapturar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnImprimir)
                            .addComponent(btnSair2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                .addGap(13, 13, 13))
        );

        setBounds(20, 20, 1329, 439);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCapturarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapturarActionPerformed
        //TelaCadastro tc = new TelaCadastro();
        //tc.setVisible(true);
        int row = jbTabela.getSelectedRow();
        objclientes.setDad_id(Integer.parseInt(jbTabela.getValueAt(row, 0).toString().trim()));
        TelaCadastro.recebeid(objclientes);
        dispose();


    }//GEN-LAST:event_btnCapturarActionPerformed

    private void btnSair2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSair2ActionPerformed
        // TODO add your handling code here:
        //TelaPrincipal.consulta = false;
        dispose();
    }//GEN-LAST:event_btnSair2ActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:

        DefaultTableModel mpl = (DefaultTableModel) jbTabela.getModel();
        int l = mpl.getRowCount();

        if (l > 0) {
            while (l > 0) {
                ((DefaultTableModel) jbTabela.getModel()).removeRow(l - 1);
                l--;
            }
        }// fim do if verifica se tem alguma informação na tabela
        //fim do limpa tabela

        try {

            ResultSet rs = ConsultaDAO.class.newInstance().carregaTela();

            //Imntancia o obj mp  da classe DefaultTableModel
            DefaultTableModel mp = (DefaultTableModel) jbTabela.getModel();

            while (rs.next()) {
                //pega os dados da linha no banco de dado.
                String Coluna0 = rs.getString("id").trim();
                String Coluna1 = rs.getString("nome").trim();
                String Coluna2 = rs.getString("situacao").trim();
                String Coluna3 = rs.getString("data").trim();
                String Coluna4 = rs.getString("email").trim();
                String Coluna5 = rs.getString("celular").trim();
                String Coluna6 = rs.getNString("whatsapp").trim();
                String Coluna7 = rs.getString("cpf").trim();
                String Coluna8 = rs.getString("rg").trim();
                String Coluna9 = rs.getString("sexo").trim();
                String Coluna10 = rs.getString("endereco").trim();
                String status = rs.getString("situacao").trim();
                String Coluna11 = "";
                if (status.equals("1")) {
                    Coluna11 = "Ativo";
                }
                if (status.equals("0")) {
                    Coluna11 = "Inativo";
                }

                mp.addRow(new String[]{Coluna0, Coluna1, Coluna2, Coluna3, Coluna4, Coluna5, Coluna6, Coluna7, Coluna8, Coluna9, Coluna10, Coluna11});

            }

        } catch (SQLException erro) {
            JOptionPane.showConfirmDialog(this, "Ocorreu um erro: " + erro, "Preencher o item: ", 2);
        } catch (InstantiationException ex) {
            Logger.getLogger(TelaConsulta.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(TelaConsulta.class.getName()).log(Level.SEVERE, null, ex);
        }

        tamanhocolunas();
        jbTabela.setAutoCreateColumnsFromModel(true);// ordena as linhas ao clinar na coluna


    }//GEN-LAST:event_formInternalFrameOpened

    private void tjArgKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tjArgKeyReleased

        String tipo = " ";
        String selecao = jcTipo.getSelectedItem().toString().trim();
        if (selecao.equals("Nome")) {
            tipo = " " + "nome";
        }
        if (selecao.equals("Cpf")) {
            tipo = " " + "cpf";
        }
        if (selecao.equals("Rg")) {
            tipo = " " + "rg";
        }
        String arg = tjArg.getText();

        try {

            ResultSet rs = ConsultaDAO.carregaTabela(tipo, arg);

            DefaultTableModel mp = (DefaultTableModel) jbTabela.getModel();

            while (rs.next()) {
                //pega os dados da linha no banco de dado.
                String Coluna0 = rs.getString("id").trim();
                String Coluna1 = rs.getString("nome").trim();
                String Coluna2 = rs.getString("situacao").trim();
                String Coluna3 = rs.getString("data").trim();
                String Coluna4 = rs.getString("email").trim();
                String Coluna5 = rs.getString("celular").trim();
                String Coluna6 = rs.getNString("whatsapp").trim();
                String Coluna7 = rs.getString("cpf").trim();
                String Coluna8 = rs.getString("rg").trim();
                String Coluna9 = rs.getString("sexo").trim();
                String Coluna10 = rs.getString("endereco").trim();
                String status = rs.getString("situacao").trim();
                String Coluna11 = "";
                if (status.equals("1")) {
                    Coluna11 = "Ativo";
                }
                if (status.equals("0")) {
                    Coluna11 = "Inativo";
                }

                mp.addRow(new String[]{Coluna0, Coluna1, Coluna2, Coluna3, Coluna4, Coluna5, Coluna6, Coluna7, Coluna8, Coluna9, Coluna10, Coluna11});

            }

        } catch (SQLException erro) {
            JOptionPane.showConfirmDialog(this, "Ocorreu um erro: " + erro, "Preencher o item: ", 2);
            System.out.println("Erro: " + erro);
        }
        tamanhocolunas();
        jbTabela.setAutoCreateColumnsFromModel(true);// ordena as linhas ao clinar na coluna

    }//GEN-LAST:event_tjArgKeyReleased

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        DefaultTableModel mp1 = (DefaultTableModel) jbTabela.getModel();
        int l = mp1.getRowCount();
        if (l > 0) {
            while (l > 0) {
                ((DefaultTableModel) jbTabela.getModel()).removeRow(l - 1);
                l--;
            }
        }
        //if verificar se tem informação na tela.
        //fim do limpa tela.

        String tipo = " ";
        String selecao = jcTipo.getSelectedItem().toString().trim();
        if (selecao.equals("Nome")) {
            tipo = " " + "nome";
        }
        if (selecao.equals("Cpf")) {
            tipo = " " + "cpf";
        }
        if (selecao.equals("Rg")) {
            tipo = " " + "rg";
        }

        String arg = tjArg.getText();

        try {

            ResultSet rs = ConsultaDAO.carregaTabela(tipo, arg);

            DefaultTableModel mp = (DefaultTableModel) jbTabela.getModel();

            while (rs.next()) {
                //pega os dados da linha no banco de dado.
                String Coluna0 = rs.getString("id").trim();
                String Coluna1 = rs.getString("nome").trim();
                String Coluna2 = rs.getString("situacao").trim();
                String Coluna3 = rs.getString("data").trim();
                String Coluna4 = rs.getString("email").trim();
                String Coluna5 = rs.getString("celular").trim();
                String Coluna6 = rs.getNString("whatsapp").trim();
                String Coluna7 = rs.getString("cpf").trim();
                String Coluna8 = rs.getString("rg").trim();
                String Coluna9 = rs.getString("sexo").trim();
                String Coluna10 = rs.getString("endereco").trim();
                String status = rs.getString("situacao").trim();
                String Coluna11 = "";
                if (status.equals("1")) {
                    Coluna11 = "Ativo";
                }
                if (status.equals("0")) {
                    Coluna11 = "Inativo";
                }

                mp.addRow(new String[]{Coluna0, Coluna1, Coluna2, Coluna3, Coluna4, Coluna5, Coluna6, Coluna7, Coluna8, Coluna9, Coluna10, Coluna11});

            }

        } catch (SQLException erro) {
            JOptionPane.showConfirmDialog(this, "Ocorreu um erro: " + erro, "Preencher o item: ", 2);
            System.out.println("Erro: " + erro);
        }
        tamanhocolunas();
        jbTabela.setAutoCreateColumnsFromModel(true);// ordena as linhas ao clinar na coluna
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed

        int row = jbTabela.getSelectedRow();
        String arg = jbTabela.getValueAt(row, 0).toString().trim();

        GeraRelatorio relatorio = new GeraRelatorio();
        
        try {
            relatorio.ficha("C:/Users/Deyvid/Documents/FIC/2022.1/"
                    + "/Programação II/ProjetoCrudCadastro/src/Report/relatorio.jasper", arg);

        } catch (Exception erro) {
            Logger.getLogger(TelaConsulta.class.getName()).log(Level.SEVERE, null, erro);
            JOptionPane.showMessageDialog(null, "Erro ao gera relatorio " + erro);
            System.out.println("Erro: " + erro);
        }


    }//GEN-LAST:event_btnImprimirActionPerformed

    public void tamanhocolunas() {
        jbTabela.getColumnModel().getColumn(0).setMinWidth(100);
        jbTabela.getColumnModel().getColumn(1).setMinWidth(250);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapturar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSair2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jbTabela;
    private javax.swing.JComboBox<String> jcTipo;
    private javax.swing.JTextField tjArg;
    // End of variables declaration//GEN-END:variables
}
